#!/usr/bin/env python3
import argparse
import requests
import atoma
import os
from wthr import Weather
from wthr import WthrConfig
OPTION_PATH = '/home/{}/.local/share/wthr'.format(os.environ['USER'])

VERSION = "0.0.1"
DESCRIPTION = "weather forecasts for canada"


def configure(args):
    if not os.path.exists(OPTION_PATH):
        print('creating directory')
        os.makedirs(OPTION_PATH)
    config_file = os.path.join(OPTION_PATH,'config')

    config = WthrConfig()
    config.get_user_config(config_file)


def print_weather(args):
    # if not specified, print everything
    if not args.alerts and not args.forecast and not args.current:
        args.alerts = True
        args.forecast = True
        args.current = True


    #local configFile
    config_file = os.path.join(OPTION_PATH,'config')
    if os.path.exists(config_file):
        config = WthrConfig()
        config.load(config_file)
        if args.province is None:
            args.province = config.province
        if args.region_id is None:
            args.region_id = config.region_id
        if not args.francais and config.language == 'fr':
            args.french = True

    # quit if no language or config defined
    if args.region_id is None or args.province is None:
        print("No provice or region_id selected. Either pass -r and -p arguments or set up defaults by running 'wthr --config'")
        return
    lang = 'e'
    if args.francais:
        lang = 'f'
    w = Weather(args.region_id,args.province,lang)
    w.get_weather()
    if args.alerts:
        w.print_alerts()

    if args.current:
        w.print_current_conditions()
        print()


    if args.day:
        w.print_forecast_date(args.day)
        print()

    elif args.forecast:
        w.print_forecast()
        print()


def main():
    #create main parser
    parser = argparse.ArgumentParser(description='Get weather information from Environment Canada')
    parser.add_argument('-p','--province',type=str,choices=['on','ab','mb','sk','bc','qc','nb','ns','pe','nl','nt','yt','nu'],help="selected province")
    parser.add_argument('-fr','--francais', action="store_true",help="print in french")
    parser.add_argument('-r','--region_id',type=int,help="selected region")
    parser.add_argument('-c','--current',action='store_true',help='print current conditions')
    parser.add_argument('-f','--forecast',action='store_true',help='print forecast')
    parser.add_argument('-a','--alerts',action='store_true',help='print alerts')
    parser.add_argument('-d','--day',type=str,choices=['m','t','w','th','f','s','su'])
    parser.add_argument('--config',action="store_true",help="configure default values" )



    args = parser.parse_args()
    if args.config is True:
        configure(args)
    else:
        print_weather(args)





if __name__ == '__main__':
    main()
